<?xml version="1.0" encoding="UTF-8"?>
<!--
//MIT License

//Copyright (c) 2021-2022 Peter Kirmeier

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.
-->
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:common="clr-namespace:HitCounterManager.Common;assembly=HitCounterManager"
             xmlns:local="clr-namespace:HitCounterManager.ViewModels;assembly=HitCounterManager"
             x:Class="HitCounterManager.Views.ProfileView"
             x:Name="ProfileViewPage"
             BackgroundColor="Transparent">

    <ContentView.BindingContext>
        <local:ProfileViewModel />
    </ContentView.BindingContext>

    <StackLayout Padding="0" Margin="0" Spacing="2" HorizontalOptions="FillAndExpand" Orientation="Vertical">

        <StackLayout Orientation="Horizontal" Spacing="8" HorizontalOptions="FillAndExpand" HeightRequest="32">
            <!-- Font size names: https://docs.microsoft.com/de-de/xamarin/xamarin-forms/user-interface/text/fonts#understand-named-font-sizes -->
            <!-- https://docs.microsoft.com/de-de/xamarin/xamarin-forms/user-interface/controls/common-properties#units-of-measurement -->
            <!-- text size scaling:  GTK: x in pixels  Others: in 160 DPI???                        FontSize="{OnPlatform 14, GTK=10}-->
            <!-- WPF Named sizes: https://github.com/xamarin/Xamarin.Forms/blob/caab66bcf9614aca0c0805d560a34e176d196e17/Xamarin.Forms.Platform.WPF/WPFResources.xaml -->
            <!-- GTK Named sizes: https://github.com/xamarin/Xamarin.Forms/blob/caab66bcf9614aca0c0805d560a34e176d196e17/Xamarin.Forms.Platform.GTK/GtkPlatformServices.cs -->
            <Label Text="{Binding StatsProgress}"  Margin="0" HorizontalOptions="StartAndExpand"  FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" />
            <Label Text="{Binding StatsTime}"      Margin="0" HorizontalOptions="CenterAndExpand" FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" x:Name="StatsTime" />
            <Label Text="{Binding StatsTotalHits}" Margin="0" HorizontalOptions="EndAndExpand"    FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" />
        </StackLayout>

        <Picker x:Name="profileSelector" ItemsSource="{Binding ProfileList}" ItemDisplayBinding="{Binding Name}" SelectedItem="{Binding ProfileSelected}" />

        <!-- TODO: Merge this with actual list below to maintain same grid definitions -->
        <Grid Padding="0,8,0,0" Margin="0" RowSpacing="0" ColumnSpacing="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!--<RowDefinition Height="0.5"/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <RelativeLayout Grid.Row="0" Grid.Column="0" Margin="0" HeightRequest="18" BackgroundColor="{AppThemeBinding Default={StaticResource ImageButtonBackgroundLight}, Dark={StaticResource ImageButtonBackgroundDark}}" HorizontalOptions="Center" VerticalOptions="Center">
                <Image Source="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-information-18.png}" >
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ToggleShowInfo}" CommandParameter="MainColumnHeaders" NumberOfTapsRequired="1" />
                    </Image.GestureRecognizers>
                </Image>
            </RelativeLayout>
            <Label Grid.Column="1" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="StartAndExpand"  FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" Text="Title" />
            <Label Grid.Column="2" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" HorizontalTextAlignment="Center" Text="Boss&#10;Hits" />
            <Label Grid.Column="3" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" HorizontalTextAlignment="Center" Text="Way&#10;Hits" />
            <Label Grid.Column="4" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" HorizontalTextAlignment="Center" Text="Diff" />
            <Label Grid.Column="5" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" HorizontalTextAlignment="Center" Text="PB" />
            <Label Grid.Column="6" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" FontAttributes="Bold" FontFamily="Arial" FontSize="{OnPlatform 14, GTK=10}" HorizontalTextAlignment="Center" Text="SP" />
            <Label Grid.Column="7" Margin="0" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" Text=" " />
        </Grid>
        <!-- Workaround: GTK is failing to use inherited color, so it is applied manually here -->
        <Frame OutlineColor="Accent" Padding="{OnPlatform 8, WPF=0}" HorizontalOptions="FillAndExpand" VerticalOptions="StartAndExpand"
               IsVisible="{Binding ShowInfo[MainColumnHeaders].Value, Mode=OneWay}"
               BackgroundColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}},Path=BackgroundColor, Mode=OneWay}">
            <Label Padding="{OnPlatform 0, WPF=8}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                <Label.FormattedText>
                    <FormattedString>
                        <Span>* Titel: The name of the split.
* Boss Hits: Amount of hits taken by anything or bosses or just a marker that a boss has been defeated (depends on the configured behavior).
* Way Hits: Amount of hits taken on the way to a boss or not used at all (depends on the configured behavior). E.g. track if a boss or the way through a slit should be trained more.
* Diff: The difference between the hits taken (sum of Boss Hits and Way Hits) and the personal best hits taken.
* SP (Session Progress): Marks the furthest reached split since the application has been started. E.g. furthest reached split during a single stream.
* Trash: Removes the split from the list.</Span>
                    </FormattedString>
                </Label.FormattedText>
            </Label>
        </Frame>
        <!-- Maybe CollectionView, but seems buggy: https://docs.microsoft.com/de-de/xamarin/xamarin-forms/user-interface/collectionview/populate-data -->
        <!-- https://www.jerriepelser.com/blog/3-ways-dynamic-data-templates/ (Use option 3?) -->
        <StackLayout Padding="0" Margin="0" Spacing="0" x:Name="ProfileList" BindableLayout.ItemsSource="{Binding ProfileSelected.Rows}" HorizontalOptions="FillAndExpand" Orientation="Vertical">
            <BindableLayout.ItemTemplate>
                <DataTemplate>
                    <Grid Padding="2" Margin="0" RowSpacing="0" ColumnSpacing="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!--<RowDefinition Height="0.5"/>-->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <DataTrigger TargetType="Grid" Binding="{Binding Active, Mode=OneWay}" Value="false">
                                <Setter Property="BackgroundColor" Value="Transparent"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid" Binding="{Binding Active, Mode=OneWay}" Value="true">
                                <Setter Property="BackgroundColor" Value="Goldenrod"/>
                            </DataTrigger>
                        </Grid.Triggers>
                        <RelativeLayout Grid.Column="0" Margin="0" WidthRequest="20" HeightRequest="20" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand"
                                        BackgroundColor="{AppThemeBinding Default={StaticResource ImageButtonBackgroundLight}, Dark={StaticResource ImageButtonBackgroundDark}}">
                            <Image Source="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-inactive-state-20.png}" >
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.CmdSetActiveSplit, Source={x:Reference ProfileViewPage}}" CommandParameter="{Binding .}" NumberOfTapsRequired="1" />
                                </Image.GestureRecognizers>
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image" Binding="{Binding Active, Mode=OneWay}" Value="false">
                                        <Setter Property="Source" Value="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-inactive-state-20.png}"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image" Binding="{Binding Active, Mode=OneWay}" Value="true">
                                        <Setter Property="Source" Value="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-circled-right-20.png}"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </RelativeLayout>
                        <Entry Grid.Column="1" Margin="0" HorizontalTextAlignment="Start" Text="{Binding Title}" Placeholder="       [Empty title]" />
                        <Entry Grid.Column="2" Margin="0" HorizontalTextAlignment="Center" Text="{Binding Hits}" Placeholder="0">
                            <Entry.Behaviors>
                                <common:NaturalNumbersEntryValidationBehavior />
                            </Entry.Behaviors>
                        </Entry>
                        <Entry Grid.Column="3" Margin="0" HorizontalTextAlignment="Center" Text="{Binding WayHits}" Placeholder="0">
                            <Entry.Behaviors>
                                <common:NaturalNumbersEntryValidationBehavior />
                            </Entry.Behaviors>
                        </Entry>
                        <StackLayout Grid.Column="4" Margin="0" Padding="0" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                            <!-- Workaround: GTK cannot render a Label correctly after the Control gets created during runtime, so we use Entry instead -->
                            <Entry VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" HorizontalTextAlignment="Center" Text="{Binding Diff, Mode=OneWay}" IsEnabled="False">
                                <Entry.IsVisible>
                                    <OnPlatform x:TypeArguments="x:Boolean" Default="false">
                                        <On Platform="GTK" Value="true" />
                                    </OnPlatform>
                                </Entry.IsVisible>
                            </Entry>
                            <Label VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" HorizontalTextAlignment="Center" Text="{Binding Diff, Mode=OneWay}">
                                <Label.IsVisible>
                                    <OnPlatform x:TypeArguments="x:Boolean" Default="true">
                                        <On Platform="GTK" Value="false" />
                                    </OnPlatform>
                                </Label.IsVisible>
                            </Label>
                        </StackLayout>
                        <Entry Grid.Column="5" Margin="0" HorizontalTextAlignment="Center" Text="{Binding PB}" Placeholder="0">
                            <Entry.Behaviors>
                                <common:NaturalNumbersEntryValidationBehavior />
                            </Entry.Behaviors>
                        </Entry>
                        <RelativeLayout Grid.Column="6" Margin="0" WidthRequest="20" HeightRequest="20" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand"
                                        BackgroundColor="{AppThemeBinding Default={StaticResource ImageButtonBackgroundLight}, Dark={StaticResource ImageButtonBackgroundDark}}">
                            <Image Source="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-star-20.png}" >
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.CmdSetSessionProgress, Source={x:Reference ProfileViewPage}}" CommandParameter="{Binding .}" NumberOfTapsRequired="1" />
                                </Image.GestureRecognizers>
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image" Binding="{Binding SP, Mode=OneWay}" Value="false">
                                        <Setter Property="Source" Value="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-star-20.png}"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image" Binding="{Binding SP, Mode=OneWay}" Value="true">
                                        <Setter Property="Source" Value="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-star-filled-20.png}"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </RelativeLayout>
                        <RelativeLayout Grid.Column="7" Margin="0" WidthRequest="20" HeightRequest="20" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand"
                                        BackgroundColor="{AppThemeBinding Default={StaticResource ImageButtonBackgroundLight}, Dark={StaticResource ImageButtonBackgroundDark}}">
                            <Image Source="{common:ImageFromResource Resource=HitCounterManager.Resources.Images.icons8-trash-20.png}" >
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.CmdRemoveSplit, Source={x:Reference ProfileViewPage}}" CommandParameter="{Binding .}" NumberOfTapsRequired="1" />
                                </Image.GestureRecognizers>
                            </Image>
                        </RelativeLayout>
                    </Grid>
                </DataTemplate>
            </BindableLayout.ItemTemplate>
        </StackLayout>
    </StackLayout>
</ContentView>
