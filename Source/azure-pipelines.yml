# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- v2.x

stages:
- stage: Build

#  variables:
#    projectfile: '**/*.$(Agent.JobName).csproj'

  jobs:
  - job:

    strategy:
      maxParallel: 2
      matrix:
        WinWPF:
          PlatformLayer: WPF
          OSLayer: Windows
#        WinGTK:
#          PlatformLayer: GTK
#          OSLayer: Windows
        AnyGTK:
          PlatformLayer: GTK
          OSLayer: Any
    pool:
      vmImage: 'windows-latest'

    variables:
      projectfile: '**/*.$(PlatformLayer).csproj'
      buildConfiguration: 'Release'

    steps:

    - task: NuGetToolInstaller@1
      displayName: NuGet Install

    - task: NuGetCommand@2
      displayName: NuGet Restore
      inputs:
        restoreSolution: '**/*.sln'

    - task: CmdLine@2
      displayName: GTK# Install
      condition: eq(variables['PlatformLayer'], 'GTK')
      inputs:
        script: |
          msiexec /i https://xamarin.azureedge.net/GTKforWindows/Windows/gtk-sharp-2.12.45.msi /quiet

    - task: MSBuild@1
      displayName: Compile
      inputs:
        solution: '$(projectfile)'
        msbuildArchitecture: 'x64'
        platform: 'AnyCPU'
        configuration: '$(buildConfiguration)'
        clean: true
        logProjectEvents: true
        createLogFile: true
        logFileVerbosity: 'detailed'

    - task: kherzog.AssemblyInfoReader.assembly-info-reader-build-task.AssembyInfoReader@2
      displayName: 'Assembly Variables'

    - task: ArchiveFiles@2
      displayName: 'Archive $(Build.ArtifactStagingDirectory)'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)\bin\$(buildConfiguration)\'
        includeRootFolder: false
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.DefinitionName)-$(AssemblyInfo.AssemblyVersion)-PreRelease.zip'

- stage: Deploy
  jobs:
  - job:
    displayName: 'Deploy Artifacts'
    dependsOn:
    - WinWPF
    - AnyGTK

    steps:

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: PreRelease'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'Container'
        ArtifactName: 'PreRelease'
